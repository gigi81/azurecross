pool:
  vmImage: 'ubuntu-16.04'

variables:
  #https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-a/downloads
  TC_VERSION: 9.2-2019.12

resources:
- repo: self
  clean: true

steps:
- checkout: self
  clean: true

- task: Docker@2
  displayName: login on docker hub
  inputs:
    command: login
    containerRegistry: docker-hub-gigi81

- task: Bash@3
  displayName: 'Check environment'
  inputs:
    targetType: inline
    script: |
     if [ -z "$TC_VERSION" ]
     then
         exit 1
     else
         echo "Building version $TC_VERSION"
     fi
     
- task: Docker@2
  displayName: base image build
  inputs:
    command: build
    repository: gigi81/azurecross
    dockerfile: base/Dockerfile
    buildContext: base
    tags: |
      base
      base-$(TC_VERSION)

- template: docker-build.yml
  parameters:
    arch: 'arm-linux-gnueabi'

- template: docker-build.yml
  parameters:
    arch: 'arm-linux-gnueabihf'

- template: docker-build.yml
  parameters:
    arch: 'aarch64-linux-gnu'

- task: Docker@2
  displayName: Publish Docker Images to Docker Hub
  inputs:
    command: push
    repository: gigi81/azurecross
    tags: |
      base
      base-$(TC_VERSION)
      arm-linux-gnueabi
      arm-linux-gnueabi-$(TC_VERSION)
      arm-linux-gnueabihf
      arm-linux-gnueabihf-$(TC_VERSION)
      aarch64-linux-gnu
      aarch64-linux-gnu-$(TC_VERSION)
